&__GetInTouch {
    position: relative;
    width: 100%;
    height: auto;
    color: $C5;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: stretch;
    gap: 2rem;
    // pointer-events: none;
    // background-color: #000;
    @include GlobalPadding();
    &__Heading {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-start;
        gap: 1rem;
        max-width: 500px;
        &__Title {
            font-size: 2.25rem;
            font-weight: 600;
        }
        &__Description {
            font-size: 1.25rem;
            line-height: 1.5;
            color: rgba($C5, 75%);
            font-weight: 600;
        }
    }
    &__Form {
        position: relative;
        width: 100%;
        background-color: transparent;
        /**
   * User input values.
   */
        --grid-layout-gap: 2rem;
        --grid-column-count: 2;
        --grid-item--min-width: 200px;
        /**
   * Calculated values.
                    */
        --gap-count: calc(var(--grid-column-count) - 1);
        --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
        --grid-item--max-width: calc((100% - var(--total-gap-width)) / var(--grid-column-count));
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr));
        grid-gap: var(--grid-layout-gap);
        // grid-gap: 2rem;
        &__Field {
            width: 100%;
            height: auto;
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: flex-start;
            gap: 0.5rem;
            @media screen and (min-width: 1024px) {
                &:nth-child(1) {
                    grid-column: 1 / 3;
                    grid-row: 1 / 2;
                }
                &:nth-child(6) {
                    grid-column: 1 / 3;
                    grid-row: 4 / 4;
                }
            }
            &__Label {
                font-size: 1.25rem;
                font-weight: 600;
                color: rgba($C5, 50%);
            }
            // Error
            &__Error {
                color: $C3;
                font-size: 0.85rem;
                font-weight: 600;
                opacity: 75%;
            }
            &__Container {
                position: relative;
                width: 100%;
                height: auto;
                background-color: rgba(255, 255, 255, 0.1);
                // border: 1px solid rgba(255, 255, 255, 0.1);
                border-radius: 0px;
                pointer-events: all;
                &:has(.Focused) {
                    background-color: rgba($C5, 50%);
                }
                &::before,
                &::after {
                    border-radius: inherit;
                    content: "";
                    height: 100%;
                    left: 0px;
                    opacity: 0;
                    position: absolute;
                    top: 0px;
                    transition: opacity 500ms;
                    width: 100%;
                    pointer-events: none;
                }
                &::before {
                    background: radial-gradient(800px circle at var(--mouse-x) var(--mouse-y), rgba(255, 255, 255, 0.1), transparent 40%);
                    z-index: 3;
                }
                &::after {
                    background: radial-gradient(600px circle at var(--mouse-x) var(--mouse-y), rgba(255, 255, 255, 0.04), transparent 40%);
                    z-index: 1;
                }
                &:hover {
                    &::before {
                        opacity: 1;
                    }
                }
                &__Input {
                    position: relative;
                    display: block;
                    padding: 1rem 1rem;
                    background-color: #333;
                    outline: none;
                    border: none;
                    width: calc(100% - 2px);
                    height: calc(100% - 2px);
                    font-size: 1rem;
                    inset: 1px;
                    color: rgba($C5, 50%);
                    z-index: 2;
                    &:focus,
                    &:active {
                        background-color: #222;
                        // border: 1px solid rgba($C5, 50%);
                        color: rgba($C5, 50%);
                    }
                    &.react-select-container {
                        padding: 0;
                        // position: relative;
                    }
                    &.Interest {
                        z-index: 200;
                    }
                    &.Budget {
                        z-index: 210;
                    }
                    &.MuiInputBase-root {
                        padding: 0;
                    }
                }
                textarea {
                    resize: vertical;
                }
            }
        }
    }
    &__FormAction {
        width: 100%;
        height: auto;
        --grid-layout-gap: 2rem;
        --grid-column-count: 2;
        --grid-item--min-width: 200px;
        /*** Calculated values.*/
        --gap-count: calc(var(--grid-column-count) - 1);
        --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
        --grid-item--max-width: calc((100% - var(--total-gap-width)) / var(--grid-column-count));
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr));
        grid-gap: var(--grid-layout-gap);
        .DefaultButton {
            border-radius: 0;
            @media screen and (min-width: 1024px) {
                grid-column: 2 / 3;
                grid-row: 1 / 1;
            }
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background .3s ease;
            background: $G4;
            &.Loading {
                justify-content: space-between;
                background: $G3;
                padding: 0.9rem 2rem;
            }
            .MuiLoadingButton-loadingIndicator {
                position: relative;
                display: flex;
                justify-content: space-between;
                align-items: center;
                svg {
                    color: $C5;
                    position: relative;
                }
            }
        }
    }
    &__Modal {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba($C1, 50%);
        backdrop-filter: blur(10px);
        width: 100%;
        z-index: 1001;
        transform: translateZ(0);
        display: flex;
        justify-content: center;
        align-items: center;
        @include GlobalPadding();
        &__Message {
            position: relative;
            width: 100%;
            height: fit-content;
            background: $G4;
            max-height: min(600px, 80vh);
            max-width: 400px;
            // @include GlobalPadding();
            padding: 2rem;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            gap: 2rem;
            text-align: center;
            &__Title {
                font-size: 2rem;
                font-weight: 700;
                letter-spacing: 2px;
            }
            &__Subtitle {
                font-size: 1rem;
                font-weight: 300;
            }
            box-shadow: 0px 4.6px 3.4px -61px rgba($C4, 0.022),
            0px 11.7px 8.7px -61px rgba($C4, 0.031),
            0px 23.9px 17.7px -61px rgba($C4, 0.039),
            0px 49.3px 36.5px -61px rgba($C4, 0.048),
            0px 135px 100px -61px rgba($C4, 0.07);
        }
    }
}